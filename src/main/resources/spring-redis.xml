<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/util    http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
		>

    <!-- <context:property-placeholder location="classpath:redis.properties" /> -->
    <bean id="redisConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
                <value>classpath*:redis.properties</value>
            </list>  
        </property>  
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean> 

    <!-- redis 相关配置 -->  
    <!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.pool.maxIdle}" />  
        <property name="maxTotal" value="${redis.pool.maxActive}" />  
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />  
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
    </bean>  
   
    <bean id="connectionFactory"  
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis.host}" />  
        <property name="port" value="${redis.port}" />  
        <property name="password" value="${redis.password}" />  
        <property name="timeout" value="${redis.timeout}" />  
        <property name="usePool" value="true" />  
        <property name="poolConfig" ref="poolConfig" />  
    </bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast 
			to String！！！
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean> -->
	
	<!-- 连接池配置 -->  
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.pool.maxIdle}" />  
        <property name="maxTotal" value="${redis.pool.maxActive}" />  
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />  
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
    </bean>  
    <!-- 连接池 -->  
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">  
        <constructor-arg index="0" ref="poolConfig" />  
        <constructor-arg index="1">  
            <list>  
            	<bean class="redis.clients.jedis.JedisShardInfo">  
                    <!-- <constructor-arg name="host"  
                        value="redis://:123@192.168.3.50:6379" />   -->
                    <constructor-arg name="host" value="${redis.host}" />  
                    <constructor-arg name="port" value="${redis.port}" />  
                    <constructor-arg name="timeout" value="${redis.timeout}" />  
                </bean> 
            </list>  
        </constructor-arg>  
    </bean>  

</beans>
	
	